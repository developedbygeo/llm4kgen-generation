UNWIND $rows AS row MERGE (artwork:Artwork {objectID: row.objectID}) ON CREATE SET artwork.Title = row.Title, artwork.Medium = row.Medium, artwork.AccessionNumber = row.AccessionNumber, artwork.Department = row.Department, artwork.Cataloged = row.Cataloged, artwork.OnView = row.OnView ON MATCH SET artwork.Title = row.Title, artwork.Medium = row.Medium, artwork.AccessionNumber = row.AccessionNumber, artwork.Department = row.Department, artwork.Cataloged = row.Cataloged, artwork.OnView = row.OnView;
UNWIND $rows AS row with row WHERE row.Classification IS NOT NULL MERGE (classification:Classification {Classification: row.Classification}) ON CREATE SET classification.Classification = row.Classification MERGE (artwork:Artwork {objectID: row.objectID}) MERGE (artwork)-[:HAS_CLASSIFICATION]->(classification);
UNWIND $rows AS row with row WHERE row.WidthVal IS NOT NULL MERGE (widthVal:WidthVal {value: row.WidthVal}) ON CREATE SET widthVal.value = row.WidthVal MERGE (artwork:Artwork {objectID: row.objectID}) MERGE (artwork)-[:HAS_WIDTH]->(widthVal);
UNWIND $rows AS row with row WHERE row.SeatHeight IS NOT NULL MERGE (seatHeight:SeatHeight {value: row.SeatHeight}) ON CREATE SET seatHeight.value = row.SeatHeight MERGE (artwork:Artwork {objectID: row.objectID}) MERGE (artwork)-[:HAS_SEAT_HEIGHT]->(seatHeight);
UNWIND $rows AS row with row WHERE row.HeightVal IS NOT NULL MERGE (heightVal:HeightVal {value: row.HeightVal}) ON CREATE SET heightVal.value = row.HeightVal MERGE (artwork:Artwork {objectID: row.objectID}) MERGE (artwork)-[:HAS_HEIGHT]->(heightVal);
UNWIND $rows AS row with row WHERE row.DurationVal IS NOT NULL MERGE (durationVal:DurationVal {value: row.DurationVal}) ON CREATE SET durationVal.value = row.DurationVal MERGE (artwork:Artwork {objectID: row.objectID}) MERGE (artwork)-[:HAS_DURATION]->(durationVal);
UNWIND $rows AS row with row WHERE row.DiameterVal IS NOT NULL MERGE (diameterVal:DiameterVal {value: row.DiameterVal}) ON CREATE SET diameterVal.value = row.DiameterVal MERGE (artwork:Artwork {objectID: row.objectID}) MERGE (artwork)-[:HAS_DIAMETER]->(diameterVal);
UNWIND $rows AS row with row WHERE row.UrlNode IS NOT NULL MERGE (urlNode:UrlNode {value: row.UrlNode}) ON CREATE SET urlNode.value = row.UrlNode MERGE (artwork:Artwork {objectID: row.objectID}) MERGE (artwork)-[:HAS_URL]->(urlNode);
UNWIND $rows AS row with row WHERE row.Date IS NOT NULL MERGE (dateVal:DateVal {Date: row.Date}) ON CREATE SET dateVal.Date = row.Date MERGE (artwork:Artwork {objectID: row.objectID}) MERGE (artwork)-[:HAS_DATE]->(dateVal);
UNWIND $rows AS row with row WHERE row.DateAcquired IS NOT NULL MERGE (dateAcquired:DateAcquired {DateAcquired: row.DateAcquired}) ON CREATE SET dateAcquired.DateAcquired = row.DateAcquired MERGE (artwork:Artwork {objectID: row.objectID}) MERGE (artwork)-[:HAS_DATE_ACQUIRED]->(dateAcquired);
UNWIND $rows AS row with row WHERE row.DepthVal IS NOT NULL MERGE (depthVal:DepthVal {value: row.DepthVal}) ON CREATE SET depthVal.value = row.DepthVal MERGE (artwork:Artwork {objectID: row.objectID}) MERGE (artwork)-[:HAS_DEPTH]->(depthVal);
UNWIND $rows AS row with row WHERE row.WeightVal IS NOT NULL MERGE (weightVal:WeightVal {value: row.WeightVal}) ON CREATE SET weightVal.value = row.WeightVal MERGE (artwork:Artwork {objectID: row.objectID}) MERGE (artwork)-[:HAS_WEIGHT]->(weightVal);
UNWIND $rows AS row with row WHERE row.CreditLine IS NOT NULL MERGE (creditLine:CreditLine {value: row.CreditLine}) ON CREATE SET creditLine.value = row.CreditLine MERGE (artwork:Artwork {objectID: row.objectID}) MERGE (artwork)-[:HAS_CREDIT_LINE]->(creditLine);
UNWIND $rows AS row with row WHERE row.ImageUrl IS NOT NULL MERGE (imageUrl:ImageUrl {value: row.ImageUrl}) ON CREATE SET imageUrl.value = row.ImageUrl MERGE (artwork:Artwork {objectID: row.objectID}) MERGE (artwork)-[:HAS_IMAGE_URL]->(imageUrl);
UNWIND $rows AS row with row WHERE row.LengthVal IS NOT NULL MERGE (lengthVal:LengthVal {value: row.LengthVal}) ON CREATE SET lengthVal.value = row.LengthVal MERGE (artwork:Artwork {objectID: row.objectID}) MERGE (artwork)-[:HAS_LENGTH]->(lengthVal);
UNWIND $rows AS row with row WHERE row.Dimensions IS NOT NULL MERGE (dimensions:Dimensions {value: row.Dimensions}) ON CREATE SET dimensions.value = row.Dimensions MERGE (artwork:Artwork {objectID: row.objectID}) MERGE (artwork)-[:HAS_DIMENSIONS]->(dimensions);
UNWIND $rows AS row MERGE (artist:Artist {name: row.name}) MERGE (artwork:Artwork {objectID: row.objectID}) MERGE (artwork)-[:HAS_ARTIST]->(artist);
